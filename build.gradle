buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1"
    }
}

plugins {
    id 'org.jetbrains.intellij' version "0.3.12"
}

repositories {
    mavenCentral()
}


apply plugin: 'scala'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java', 'src/main/gen']
        }
        java {
            srcDirs = []
        }
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.12.4'
}


apply plugin: 'org.jetbrains.intellij'

intellij {
    plugins = [ 'PsiViewer:182.2757.2' ]
    version ideaVersion
    updateSinceUntilBuild = false
}


apply plugin: 'org.jetbrains.grammarkit'

import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

task initGenerate(type: GenerateParser) {
    source = 'src/main/grammars/GoYacc.bnf'
    targetRoot = 'src/main/gen'
    pathToParser = '/idea/goyacc/ast/GoYaccParser.java'
    pathToPsiRoot = '/idea/goyacc/psi'
}

task initCompile(type: ScalaCompile) {
    source = fileTree(dir: 'src/main',
            includes: [
                    'scala/**/GoYaccLanguage.scala',
                    'scala/**/psi/GoYaccPsiUtil.scala',
                    'scala/**/psi/GoYaccRefs.scala',
                    'java/**/psi/GoYaccNamedElement.java',
                    'gen/**/psi/*.java'],
            excludes: ['gen/**/GoYaccType.java'])
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.scala.outputDir
    doLast {
        delete "${rootDir}/src/main/gen/idea/goyacc/psi"
    }
}

task generateGoYaccParser(type: GenerateParser) {
    dependsOn(initCompile)
    doFirst {
        classpath files(sourceSets.main.runtimeClasspath)
    }
    source = 'src/main/grammars/GoYacc.bnf'
    targetRoot = 'src/main/gen'
    pathToParser = '/idea/goyacc/ast/GoYaccParser.java'
    pathToPsiRoot = '/idea/goyacc/psi'
}

task generateGoYaccLexer(type: GenerateLexer) {
    source = 'src/main/grammars/GoYacc.flex'
    targetDir = 'src/main/gen/idea/goyacc/ast'
    targetClass = '_GoYaccLexer'
}

initCompile {
    dependsOn initGenerate
    dependsOn generateGoYaccLexer
}

compileScala {
    dependsOn generateGoYaccParser
    dependsOn generateGoYaccLexer
}

task cleanGen {
    doLast { delete "${rootDir}/src/main/gen" }
}

clean {
    dependsOn cleanGen
}


